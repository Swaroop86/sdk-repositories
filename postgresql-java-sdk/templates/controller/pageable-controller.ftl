<#-- Pageable Controller Template -->
package ${package.controller};

import ${package.entity}.${entityClass};
import ${package.service}.${serviceName};
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

/**
 * Pageable REST Controller for ${entityClass}
 * Generated by MCP PostgreSQL SDK
 */
@RestController
@RequestMapping("${apiPath}")
@RequiredArgsConstructor
@Slf4j
public class ${controllerName} {
    
    private final ${serviceName} service;
    
    @GetMapping
    public ResponseEntity<Page<${entityClass}>> getAll(
            @RequestParam(defaultValue = "0") int page,
            @RequestParam(defaultValue = "20") int size,
            @RequestParam(defaultValue = "id") String sortBy,
            @RequestParam(defaultValue = "asc") String sortDir) {
        
        Sort sort = sortDir.equalsIgnoreCase("desc") ? 
            Sort.by(sortBy).descending() : Sort.by(sortBy).ascending();
        
        PageRequest pageRequest = PageRequest.of(page, size, sort);
        Page<${entityClass}> entities = service.findAll(pageRequest);
        
        return ResponseEntity.ok(entities);
    }
}