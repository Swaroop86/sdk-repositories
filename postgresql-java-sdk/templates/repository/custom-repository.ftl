<#-- Custom Repository Template -->
package ${package.repository};

import ${package.entity}.${entityClass};
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import java.util.List;
import java.util.Optional;

/**
 * Custom Repository for ${entityClass}
 * Generated by MCP PostgreSQL SDK
 */
@Repository
public interface ${repositoryName} extends JpaRepository<${entityClass}, ${primaryKeyType}> {
    
<#list fields as field>
<#if field.unique && !field.primaryKey>
    Optional<${entityClass}> findBy${field.name?cap_first}(${field.type} ${field.name});
    boolean existsBy${field.name?cap_first}(${field.type} ${field.name});
</#if>
</#list>

    @Query("SELECT e FROM ${entityClass} e WHERE e.createdAt >= :startDate")
    List<${entityClass}> findRecentEntities(@Param("startDate") LocalDateTime startDate);
    
    @Query(value = "SELECT * FROM ${tableName} WHERE LOWER(name) LIKE LOWER(CONCAT('%', :searchTerm, '%'))", 
           nativeQuery = true)
    List<${entityClass}> searchByName(@Param("searchTerm") String searchTerm);
}